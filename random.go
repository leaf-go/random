package random

import (
	"encoding/hex"
	"math"
	"math/rand"
	"time"
)

// 有公共Random, 也可以创建新对象 -> 数据源不同
// 随机 字符串 -> 长度 , 可配置字符串

var (
	factor = []byte{
		0x21, 0x22, 0x23, 0x24, 0x2A, 0x2D, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x37, 0x38, 0x39,
		0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4F, 0x50, 0x51, 0x52,
		0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5F, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,
		0x69, 0x6A, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D,
	}
)

func makeRand() *rand.Rand {
	return rand.New(rand.NewSource(time.Now().UnixNano()))
}

func Int(min, max int) int {
	if min == max {
		return max
	}

	rd := makeRand()
	return rd.Intn(max-min+1) + min
}

// LenInt \d with length
func LenInt(length int) int {
	i := int(math.Pow10(length))
	min, max := i/10, i-1
	return Int(min, max)
}

// LenOnceString \w
func LenOnceString(length int) string {
	rs := makeRand()
	b := make([]byte, length/2)
	rs.Read(b)
	return hex.EncodeToString(b)
}

// Ws \w + sign
func Ws(n int) string {
	rs := makeRand()

	result := make([]byte, n)
	for i := 0; i < n; i++ {
		result[i] = factor[rs.Int31()%67]
	}

	return string(result)
}
